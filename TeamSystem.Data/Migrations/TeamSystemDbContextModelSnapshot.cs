// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TeamSystem.Data;

namespace TeamSystem.Data.Migrations
{
    [DbContext(typeof(TeamSystemDbContext))]
    partial class TeamSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TeamSystem.Entities.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("TeamSystem.Entities.Matches", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<int?>("GuestTeamId")
                        .HasColumnName("GuestTeam_ID");

                    b.Property<int?>("GuestTeamScore");

                    b.Property<int?>("HomeTeamId")
                        .HasColumnName("HomeTeam_ID");

                    b.Property<int?>("HomeTeamScore");

                    b.Property<DateTime?>("MatchDate")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.HasIndex("GuestTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("TeamSystem.Entities.MatchHistories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("GuestTeamPlayer")
                        .HasMaxLength(150);

                    b.Property<string>("HomeTeamPlayer")
                        .HasMaxLength(150);

                    b.Property<DateTime?>("MatchDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MatchHistories");
                });

            modelBuilder.Entity("TeamSystem.Entities.ModelRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Role")
                        .IsUnique()
                        .HasName("UQ__ModelRol__DA15413E45F365D3");

                    b.ToTable("ModelRoles");
                });

            modelBuilder.Entity("TeamSystem.Entities.PersonHistories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("FullName")
                        .HasColumnName("Full_Name")
                        .HasMaxLength(100);

                    b.Property<bool?>("IsReserve");

                    b.Property<string>("PreviousTeam")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PersonHistories");
                });

            modelBuilder.Entity("TeamSystem.Entities.PersonModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsReserve");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<int>("ModelRoleId")
                        .HasColumnName("ModelRole_ID");

                    b.Property<int>("TeamId")
                        .HasColumnName("Team_ID");

                    b.Property<string>("Ucn")
                        .IsRequired()
                        .HasColumnName("UCN")
                        .HasColumnType("nchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ModelRoleId");

                    b.HasIndex("TeamId");

                    b.HasIndex("Ucn")
                        .IsUnique()
                        .HasName("UQ__PersonMo__C5B186D24CA06362");

                    b.ToTable("PersonModels");
                });

            modelBuilder.Entity("TeamSystem.Entities.StartingMembersOfAteam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<int>("TeamId")
                        .HasColumnName("Team_ID");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique()
                        .HasName("UQ__Starting__02215C0B5535A963");

                    b.ToTable("StartingMembersOfATeam");
                });

            modelBuilder.Entity("TeamSystem.Entities.StartingPlayers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<int?>("MemberId")
                        .HasColumnName("Member_ID");

                    b.Property<int?>("PlayerId")
                        .HasColumnName("Player_ID");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PlayerId");

                    b.ToTable("StartingPlayers");
                });

            modelBuilder.Entity("TeamSystem.Entities.Teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ThumbnailUrl");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("TeamSystem.Entities.Matches", b =>
                {
                    b.HasOne("TeamSystem.Entities.Teams", "GuestTeam")
                        .WithMany("MatchesGuestTeam")
                        .HasForeignKey("GuestTeamId")
                        .HasConstraintName("FK__Matches__GuestTe__628FA481");

                    b.HasOne("TeamSystem.Entities.Teams", "HomeTeam")
                        .WithMany("MatchesHomeTeam")
                        .HasForeignKey("HomeTeamId")
                        .HasConstraintName("FK__Matches__HomeTea__619B8048");
                });

            modelBuilder.Entity("TeamSystem.Entities.PersonModels", b =>
                {
                    b.HasOne("TeamSystem.Entities.ModelRoles", "ModelRole")
                        .WithMany("PersonModels")
                        .HasForeignKey("ModelRoleId")
                        .HasConstraintName("FK__PersonMod__Model__4F7CD00D");

                    b.HasOne("TeamSystem.Entities.Teams", "Team")
                        .WithMany("PersonModels")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK__PersonMod__Team___4E88ABD4");
                });

            modelBuilder.Entity("TeamSystem.Entities.StartingMembersOfAteam", b =>
                {
                    b.HasOne("TeamSystem.Entities.Teams", "Team")
                        .WithOne("StartingMembersOfAteam")
                        .HasForeignKey("TeamSystem.Entities.StartingMembersOfAteam", "TeamId")
                        .HasConstraintName("FK__StartingM__Team___571DF1D5");
                });

            modelBuilder.Entity("TeamSystem.Entities.StartingPlayers", b =>
                {
                    b.HasOne("TeamSystem.Entities.StartingMembersOfAteam", "Member")
                        .WithMany("StartingPlayers")
                        .HasForeignKey("MemberId")
                        .HasConstraintName("FK__StartingP__Membe__5BE2A6F2");

                    b.HasOne("TeamSystem.Entities.PersonModels", "Player")
                        .WithMany("StartingPlayers")
                        .HasForeignKey("PlayerId")
                        .HasConstraintName("FK__StartingP__Playe__5CD6CB2B");
                });
#pragma warning restore 612, 618
        }
    }
}
